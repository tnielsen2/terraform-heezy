---
- name: Bootstrap GitHub Actions Runner
  hosts: runner
  become: yes
  vars:
    github_token: "{{ lookup('env', 'GITHUB_TOKEN') }}"
    github_repo: "tnielsen2/terraform-heezy"
    runner_name: "heezy-runner"
    
  tasks:
    - name: Update package cache
      apt:
        update_cache: yes
        
    - name: Install required packages
      apt:
        name:
          - curl
          - wget
          - unzip
          - jq
          - git
          - gpg
          - lsb-release
        state: present
        
    - name: Install AWS CLI
      block:
        - name: Download AWS CLI
          get_url:
            url: "https://awscli.amazonaws.com/awscli-exe-linux-x86_64.zip"
            dest: "/tmp/awscliv2.zip"
            
        - name: Extract AWS CLI
          unarchive:
            src: "/tmp/awscliv2.zip"
            dest: "/tmp"
            remote_src: yes
            
        - name: Install AWS CLI
          command: /tmp/aws/install
          args:
            creates: /usr/local/bin/aws
          
        - name: Clean up AWS CLI files
          file:
            path: "{{ item }}"
            state: absent
          loop:
            - /tmp/awscliv2.zip
            - /tmp/aws
            
    - name: Download HashiCorp GPG key
      get_url:
        url: https://apt.releases.hashicorp.com/gpg
        dest: /tmp/hashicorp.gpg
        
    - name: Add HashiCorp GPG key
      command: gpg --dearmor -o /usr/share/keyrings/hashicorp-archive-keyring.gpg /tmp/hashicorp.gpg
      args:
        creates: /usr/share/keyrings/hashicorp-archive-keyring.gpg
        
    - name: Add HashiCorp repository
      apt_repository:
        repo: "deb [signed-by=/usr/share/keyrings/hashicorp-archive-keyring.gpg] https://apt.releases.hashicorp.com {{ ansible_distribution_release }} main"
        state: present
        
    - name: Clean up GPG key file
      file:
        path: /tmp/hashicorp.gpg
        state: absent
        
    - name: Install Terraform
      apt:
        name: terraform
        state: present
        update_cache: yes
        
    - name: Create runner user
      user:
        name: runner
        shell: /bin/bash
        create_home: yes
        groups: sudo
        
    - name: Create actions-runner directory
      file:
        path: /home/runner/actions-runner
        state: directory
        owner: runner
        group: runner
        mode: '0755'
        
    - name: Download GitHub Actions runner
      get_url:
        url: "https://github.com/actions/runner/releases/download/v2.311.0/actions-runner-linux-x64-2.311.0.tar.gz"
        dest: "/tmp/actions-runner.tar.gz"
        
    - name: Extract GitHub Actions runner
      unarchive:
        src: "/tmp/actions-runner.tar.gz"
        dest: /home/runner/actions-runner
        owner: runner
        group: runner
        remote_src: yes
        
    - name: Get runner registration token
      uri:
        url: "https://api.github.com/repos/{{ github_repo }}/actions/runners/registration-token"
        method: POST
        headers:
          Authorization: "token {{ github_token }}"
          Accept: "application/vnd.github.v3+json"
        status_code: 201
      register: token_response
      
    - name: Configure GitHub Actions runner
      command: >
        ./config.sh --url https://github.com/{{ github_repo }}
        --token {{ token_response.json.token }}
        --name {{ runner_name }}
        --labels self-hosted,linux,x64
        --unattended
      args:
        chdir: /home/runner/actions-runner
      become_user: runner
      
    - name: Install runner service
      command: ./svc.sh install
      args:
        chdir: /home/runner/actions-runner
        
    - name: Start runner service
      command: ./svc.sh start
      args:
        chdir: /home/runner/actions-runner
        
    - name: Clean up
      file:
        path: /tmp/actions-runner.tar.gz
        state: absent